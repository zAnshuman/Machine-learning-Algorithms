# -*- coding: utf-8 -*-
"""day6 part2 KMeansClustering vid8

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18EKgazuyz8RJkR7M1ydAhpfhmF090z9_
"""

from sklearn.datasets import fetch_openml
import pandas as pd
import pandas as pd
data = fetch_openml('wine', version = 1, as_frame = True)
X = data.data
y = data.target

df = pd.DataFrame(X, columns = data.feature_names)
df['wine class'] = y
df

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X = sc.fit_transform(X
                     )

from sklearn.cluster import KMeans
wss = []
for i in range(1, 11):
  kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 0)
  kmeans.fit(X)
  wss.append(kmeans.inertia_) #inertia_ is used to sedn back the within-cluster-sum-of-squares value.

import matplotlib.pyplot as plt
f3, ax = plt.subplots(figsize = (8,6))
plt.plot(range(1,11), wss)
plt.title('Elbow')
plt.ylabel('wss')
plt.xlabel('clusters')
plt.show()

N = 3
k_means = KMeans(n_clusters = N, init = 'k-means++', max_iter = 360, n_init = 10)
k_means.fit(X)
labels = k_means.labels_
print(labels)

from sklearn.metrics import accuracy_score
accuracy_score(labels, y)
print(y)